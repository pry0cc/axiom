{
  "builders": [
    {
      "type": "digitalocean",
      "ssh_username": "root",
      "snapshot_name": "axiom-{{ user `region` }}-{{timestamp}}",
      "api_token": "{{ user `do_key` }}",
      "image": "ubuntu-20-04-x64",
      "region": "{{ user `region`  }}",
      "size": "s-1vcpu-1gb"
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "./configs/sshd_config",
      "destination": "/etc/ssh/sshd_config"
    },
    {
      "type": "shell",
      "inline": [
        "fallocate -l 2G /swap && chmod 600 /swap && mkswap /swap && swapon /swap",
        "add-apt-repository -y ppa:longsleep/golang-backports",
        "apt-get update -qq",
        "DEBIAN_FRONTEND=noninteractive apt-get upgrade -qq",
        "DEBIAN_FRONTEND=noninteractive UCF_FORCE_CONFFNEW=YES sudo apt-get -y --fix-missing install tor apt-transport-https ca-certificates debian-keyring p7zip zsh curl figlet zlib1g-dev python python3.7 default-jdk python3-pip python3-venv libpcap-dev ruby ruby-dev nmap vim dirmngr gnupg-agent gnupg2 libpq-dev software-properties-common golang-go fonts-liberation libappindicator3-1 libcairo2 libgbm1 libgdk-pixbuf2.0-0 libgtk-3-0 libxss1 xdg-utils masscan zmap sqlmap dirb jq ufw neovim ranger bat grc mosh net-tools",
        "sudo snap install doctl",
        "ufw allow 22",
        "ufw allow 2266",
        "ufw allow 60000/udp",
        "ufw allow 60001/udp",
        "ufw allow 60002/udp",
        "ufw allow 60003/udp",
        "ufw allow 60004/udp",
        "ufw allow 60005/udp",
        "ufw allow 60006/udp",
        "ufw allow 60007/udp",
        "ufw allow 60008/udp",
        "ufw allow 60009/udp",
        "ufw allow 60010/udp",
        "curl -fsSL get.docker.com | sh",
        "UCF_FORCE_CONFFNEW=YES apt-get upgrade -qq",
        "apt-get -qq install docker-ce",
        "wget -O /tmp/chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && cd /tmp/ && dpkg -i /tmp/chrome.deb",
        "wget -O /tmp/rustscan.deb https://github.com/brandonskerritt/RustScan/releases/download/1.0.1/rustscan_1.0.1_amd64.deb && dpkg -i /tmp/rustscan.deb",
        "wget https://bootstrap.pypa.io/get-pip.py",
        "python3 get-pip.py aiodnsbrute",
        "pip install docker-py",
        "gem install bundler wpscan nmap2json",
        "systemctl start docker",
        "systemctl enable tor",
        "ufw --force enable",
        "useradd -G sudo,docker -s /usr/bin/zsh -m op",
        "mkdir -p /home/op/.ssh /home/op/c2 /home/op/lists /home/op/bin /home/op/.config/ /home/op/work/",
        "chown -R op:users /home/op",
        "echo 'op:{{ user `do_key` }}' | chpasswd",
        "rm /etc/resolv.conf",
        "rm -rf /etc/update-motd.d/*"
      ]
    },
    {
      "type": "file",
      "source": "./configs/resolv.conf",
      "destination": "/etc/resolv.conf"
    },
    {
      "type": "file",
      "source": "./configs/docker",
      "destination": "/etc/default/docker"
    },
    {
      "type": "file",
      "source": "./configs/telegram",
      "destination": "/home/op/bin/telegram"
    },
    {
      "type": "file",
      "source": "./configs/add-path",
      "destination": "/home/op/bin/add-path"
    },
    {
      "type": "file",
      "source": "./configs/authorized_keys",
      "destination": "/home/op/.ssh/authorized_keys"
    },
    {
      "type": "file",
      "source": "./configs/telegram.json",
      "destination": "/home/op/.telegram.json"
    },
    {
      "type": "file",
      "source": "./configs/tmux.conf",
      "destination": "/home/op/.tmux.conf"
    },
    {
      "type": "file",
      "source": "./configs/tmux.conf.local",
      "destination": "/home/op/.tmux.conf.local"
    },
    {
      "type": "file",
      "source": "./configs/tmux-splash.sh",
      "destination": "/home/op/bin/tmux-splash.sh"
    },
    {
      "type": "file",
      "source": "./configs/zsh_history",
      "destination": "/home/op/.zsh_history"
    },
    {
      "type": "file",
      "source": "./configs/00-header",
      "destination": "/etc/update-motd.d/00-header"
    },
    {
      "type": "file",
      "source": "./configs/bashrc",
      "destination": "/home/op/.bashrc"
    },
    {
      "type": "file",
      "source": "./configs/zshrc",
      "destination": "/home/op/.zshrc"
    },
    {
      "type": "file",
      "source": "./configs/oh-my-zsh.tar.gz",
      "destination": "/home/op/.oh-my-zsh.tar.gz"
    },
    {
      "type": "file",
      "source": "./configs/nvim.tar.gz",
      "destination": "/home/op/.config/nvim.tar.gz"
    },
    {
      "type": "file",
      "source": "./configs/sudoers",
      "destination": "/etc/sudoers"
    },
    {
      "type": "shell",
      "inline": [
        "chattr +i /etc/resolv.conf",
        "chown -R op:users /home/op",
        "cd /tmp && wget -O /tmp/gobuster.7z https://github.com/OJ/gobuster/releases/download/v3.0.1/gobuster-linux-amd64.7z && p7zip -d /tmp/gobuster.7z && sudo mv /tmp/gobuster-linux-amd64/gobuster /usr/bin/gobuster && sudo chmod +x /usr/bin/gobuster",
        "curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o '/tmp/awscliv2.zip' && cd /tmp && unzip awscliv2.zip && sudo ./aws/install",
        "/bin/su -l op -c 'curl https://raw.githubusercontent.com/mitsuhiko/pipsi/master/get-pipsi.py | python3'",
        "sudo wget -O /usr/bin/gowitness https://github.com/sensepost/gowitness/releases/download/2.2.0/gowitness-2.2.0-linux-amd64 && sudo chmod +x /usr/bin/gowitness",
        "wget -O /home/op/bin/ffuz https://raw.githubusercontent.com/pry0cc/ffuz/main/ffuz && chmod +x /home/op/bin/ffuz",
        "sudo wget https://raw.githubusercontent.com/xero/figlet-fonts/master/Bloody.flf -O /usr/share/figlet/Bloody.flf",
        "/bin/su -l op -c 'aws s3 sync s3://assetnote-wordlists/data/ ~/lists/assetnote --no-sign-request'",
        "git clone https://github.com/ProjectAnte/dnsgen ~/recon/dnsgen && cd ~/recon/dnsgen && pip3 install -r requirements.txt && sudo python3 setup.py install",
        "git clone https://github.com/navisecdelta/EmailGen.git /home/op/recon/emailgen",
        "git clone https://github.com/blark/aiodnsbrute.git /home/op/recon/aiodnsbrute",
        "git clone https://github.com/OWASP/Amass.git /home/op/recon/amass",
        "git clone https://github.com/navisecdelta/PwnFile.git /home/op/hashes/pwnfile",
        "git clone https://github.com/lgandx/Responder.git /home/op/hashes/responder",
        "git clone https://github.com/danielmiessler/SecLists.git /home/op/lists/seclists",
        "git clone https://github.com/vortexau/dnsvalidator.git /home/op/recon/dnsvalidator && cd /home/op/recon/dnsvalidator/ && sudo python3 setup.py install",
        "git clone https://github.com/blechschmidt/massdns.git /tmp/massdns; cd /tmp/massdns; make; sudo mv bin/massdns /usr/bin/massdns",
        "git clone https://github.com/codingo/Interlace.git /home/op/recon/interlace && cd /home/op/recon/interlace/ && python3 setup.py install",
        "git clone https://github.com/rofl0r/proxychains-ng.git && cd proxychains-ng && make && make install && cd .. && sudo rm -r proxychains-ng",
        "git clone https://github.com/securing/DumpsterDiver.git /home/op/recon/DumpsterDiver && cd /home/op/recon/DumpsterDiver && pip3 install --ignore-installed -r requirements.txt",
        "git clone https://github.com/1ndianl33t/Gf-Patterns /home/op/.gf",
        "git clone https://github.com/projectdiscovery/nuclei-templates /home/op/recon/nuclei",
        "git clone https://github.com/projectdiscovery/nuclei.git; cd nuclei/v2/cmd/nuclei/; go build; sudo mv nuclei /usr/local/bin/",
        "wget -O /home/op/lists/jhaddix-all.txt https://gist.githubusercontent.com/jhaddix/86a06c5dc309d08580a018c66354a056/raw/96f4e51d96b2203f19f6381c8c545b278eaa0837/all.txt",
        "wget -O /home/op/lists/resolvers.txt https://raw.githubusercontent.com/janmasarik/resolvers/master/resolvers.txt",
        "cd /home/op && tar -xf /home/op/.oh-my-zsh.tar.gz",
        "cd /home/op/.config/ && tar -xf /home/op/.config/nvim.tar.gz",
        "cd /home/op/recon/emailgen && bundle update --bundler",
        "cd /home/op/recon/emailgen && bundle install",
        "echo \"@hunter_key = '{{ user `hunter_key` }}'\" >> /home/op/recon/emailgen/tokens.rb",
        "echo 'Setting up sn0int repository'",
        "gpg -a --export --keyring /usr/share/keyrings/debian-maintainers.gpg git@rxv.cc | apt-key add - && apt-key adv --keyserver keyserver.ubuntu.com --refresh-keys git@rxv.cc && echo deb http://apt.vulns.sexy stable main >> /etc/apt/sources.list.d/apt-vulns-sexy.list && apt-get update",
        "echo 'Installing sn0int'",
        "apt-get -y install sn0int",
        "echo 'Installing Httprobe'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/httprobe'",
        "echo 'Installing Neovim Plugin manager'",
        "/bin/su -l op -c 'curl --create-dirs -fLo ~/.local/share/nvim/site/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'",
        "echo 'Installing Meg'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/meg'",
        "echo 'Installing ffuf'",
        "/bin/su -l op -c 'go get -u github.com/ffuf/ffuf'",
        "echo 'Installing assetfinder'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/assetfinder'",
        "echo 'Installing waybackurls'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/waybackurls'",
        "/bin/su -l op -c 'GO111MODULE=on go get -u -v github.com/projectdiscovery/httpx/cmd/httpx'",
        "/bin/su -l op -c 'GO111MODULE=on go get -u -v github.com/projectdiscovery/naabu/v2/cmd/naabu'",
        "echo 'Installing gron'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/gron'",
        "echo 'Installing anti-burl'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/hacks/anti-burl'",
        "echo 'Installing kxss'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/hacks/kxss'",
        "echo 'Installing gf'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/gf'",
        "echo 'Installing hakrawler'",
        "/bin/su -l op -c 'go get -u github.com/hakluke/hakrawler'",
        "echo 'Installing getJS'",
        "/bin/su -l op -c 'go get -u github.com/003random/getJS'",
        "echo 'Installing concurl'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/hacks/concurl'",
        "echo 'Installing urlprobe'",
        "/bin/su -l op -c 'go get -u github.com/1ndianl33t/urlprobe'",
        "echo 'Installing gau'",
        "/bin/su -l op -c 'GO111MODULE=on go get -u github.com/lc/gau'",
        "echo 'Installing dnsx'",
        "git clone https://github.com/projectdiscovery/dnsx.git; cd dnsx/cmd/dnsx; sudo go build; sudo mv dnsx /usr/bin/dnsx",
        "echo 'Installing shuffledns'",
        "/bin/su -l op -c 'GO111MODULE=on go get -u -v github.com/projectdiscovery/shuffledns/cmd/shuffledns'",
        "echo 'Installing chaos client'",
        "/bin/su -l op -c 'GO111MODULE=on go get -u github.com/projectdiscovery/chaos-client/cmd/chaos'",
        "echo 'Installing unfurl'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/unfurl'",
        "echo 'Installing qsreplace'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/qsreplace'",
        "echo 'Installing subjack - this takes a while'",
        "/bin/su -l op -c 'go get -u github.com/haccer/subjack/'",
        "echo 'Installing Subfinder'",
        "/bin/su -l op -c 'GO111MODULE=auto go get -u -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder'",
        "echo 'Installing subgen'",
        "/bin/su -l op -c 'go get -u github.com/pry0cc/subgen'",
        "/bin/su -l op -c 'GO111MODULE=on go get -u github.com/theblackturtle/fprobe'",
        "wget -O /tmp/aquatone.zip https://github.com/michenriksen/aquatone/releases/download/v1.7.0/aquatone_linux_amd64_1.7.0.zip && cd /tmp/ && unzip /tmp/aquatone.zip && mv /tmp/aquatone /home/op/go/bin/aquatone",
        "wget -O /tmp/amass.zip https://github.com/OWASP/Amass/releases/download/v3.9.1/amass_linux_amd64.zip && cd /tmp/ && unzip /tmp/amass.zip && mv /tmp/amass_linux_amd64/amass /home/op/go/bin/amass",
        "/bin/su -l op -c 'mkdir -p /home/op/go/src/github.com/zmap/ && git clone https://github.com/zmap/zdns.git /home/op/go/src/github.com/zmap/zdns  && cd /home/op/go/src/github.com/zmap/zdns/zdns && go build && go install'",
        "echo 'Installing dalfox'",
        "/bin/su -l op -c 'go get -u github.com/hahwul/dalfox'",
        "Installing Jaeles Scanner",
        "/bin/su -l op -c 'GO111MODULE=on go get github.com/jaeles-project/jaeles && sudo mv /home/op/go/bin/jaeles /usr/bin/jaeles && jaeles config init",
        "touch /home/op/.profile",
        "touch /home/op/.z",
        "chown -R op:users /home/op",
        "sudo chmod +x /etc/update-motd.d/00-header"
      ]
    },
    {
      "type": "shell",
      "inline": ["chown -R op:users /home/op"]
    }
  ]
}
