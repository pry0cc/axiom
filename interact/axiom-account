#!/bin/bash

AXIOM_PATH="$HOME/.axiom"
source "$AXIOM_PATH/interact/includes/vars.sh"

BASEOS="$(uname)"
case $BASEOS in
'Linux')
    BASEOS='Linux'
    ;;
'FreeBSD')
    BASEOS='FreeBSD'
    alias ls='ls -G'
    ;;
'WindowsNT')
    BASEOS='Windows'
    ;;
'Darwin')
    BASEOS='Mac'
    ;;
'SunOS')
    BASEOS='Solaris'
    ;;
'AIX') ;;
*) ;;
esac

accounts=$(ls -l "$AXIOM_PATH/accounts/" | grep "json" | grep -v 'total ' | awk '{ print $9 }' | sed 's/\.json//g')
current=$(ls -lh ~/.axiom/axiom.json | awk '{ print $11 }' | tr '/' '\n' | grep json | sed 's/\.json//g') > /dev/null 2>&1

function bootstrap() {
account_helpers=$(find "$AXIOM_PATH/interact/account-helpers" | grep "\.sh"  | grep -v "generate" | tr '/' ' ' | awk '{ print $NF }' | tr -d '.sh')
account_str=$(echo $account_helpers | sed 's/ /, /g')
provider_path="$AXIOM_PATH/interact/account-helpers/$provider.sh"
bash "$provider_path" 
}

if [ ! -z "$1" ]
then
path="$AXIOM_PATH/accounts/$1.json"
if [[ -f "$path" ]]
then
	echo -e "${BWhite}Selecting $1...${Color_Off}"
	rm "$AXIOM_PATH/axiom.json" > /dev/null 2>&1
	ln -s "$AXIOM_PATH/accounts/$1.json" "$AXIOM_PATH/axiom.json"	
	provider="$(cat "$AXIOM_PATH/axiom.json" | jq -r '.provider')"
  $AXIOM_PATH/interact/axiom-provider $provider   

if [[ "$provider" == "do" ]]; then
echo -e "${Blue}doctl..${Color_Off}"
 token="$(jq -r '.do_key' "$AXIOM_PATH"/accounts/"$1".json)"
 doctl auth init -t "$token" || bootstrap
fi

if [[ "$provider" == "linode" ]]; 
then
token="$(jq -r '.do_key' "$AXIOM_PATH"/accounts/"$1".json)"
size="$(jq -r '.default_size' "$AXIOM_PATH"/accounts/"$1".json)"
region="$(jq -r '.region' "$AXIOM_PATH"/accounts/"$1".json)"
mkdir -p "$HOME/.config"
echo -e "[DEFAULT]\ndefault-user = axiom\n\n[axiom]\ntoken = $token\nregion = $region\ntype = $size\nimage = linode/alpine3.10" > "$HOME/.config/linode-cli"
unauthed=$(curl -s -H "Authorization: Bearer $token" https://api.linode.com/v4/account | grep Invalid  | wc -l | tr -d ' ')
if [[ "$unauthed" == "1" ]]; then
echo -e "Not authenticated to linode-cli"
bootstrap
fi
fi

if [[ "$provider" == "ibm" ]]; 
then
token="$(jq -r '.ibm_cloud_api_key' "$AXIOM_PATH"/accounts/"$1".json)"
ibmcloud login --apikey $token --no-region || bootstrap
fi

if [[ "$provider" == "azure" ]]; 
then
az ad signed-in-user show || bootstrap
fi

echo -e "${Green}Selected $1 successfully${Color_Off}"
else
echo -e "${Red}Account name not present${Color_Off}"
fi
else
echo -e "${BWhite}Available Accounts${Color_Off}"
echo -n -e "${Blue}"
	for account in $accounts
	do
		if [[ $account == $current ]]
		then
			echo "* $account"
		else
			echo "  $account"
		fi
	done
	echo -n -e "${Color_Off}"
fi
