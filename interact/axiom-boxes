#!/usr/bin/env bash

AXIOM_PATH="$HOME/.axiom"
source "$AXIOM_PATH/interact/includes/vars.sh"

if [ ! -z "$1" ]
then
	case $1 in
	ls*)
		if [[ "$2" == "--archive" ]]
		then
			echo -e "${BWhite}Archived Boxes${Color_Off}"
			echo -n -e "${Blue}"
			ls -lh $AXIOM_PATH/archive/ | sed 's/.tar.gz.gpg//g' | awk '{ print $9 " " $6 " " $7 " " $8 " " $5}' | column -t
			echo -n -e "${Color_Off}"
		else
			echo -e "${BWhite}Available Backup Boxes${Color_Off}"
			echo -n -e "${Blue}"
			ls -lh  $AXIOM_PATH/boxes/ | grep -v "backup-files.txt" | awk '{ print $9 " " $6 " " $7 " " $8 " " $5}' | column -t
			echo -n -e "${Color_Off}"
		fi
		;;
	cd*)
		box_path="$AXIOM_PATH/boxes/$2"

		if [ -d "$box_path" ]
		then
			echo -e "${BWhite}Changing directory to box '$2'...${Color_Off}"
		
			cd "${box_path}"
			exec $SHELL
		else
			echo -e  "${BRed}Box doesn't exist${Color_Off}"
		fi
		;;
	rm*)
		box_path="$AXIOM_PATH/boxes/$2"

		if [ -d "$box_path" ]
		then
			echo -e "${BWhite}Deleting box backup '$2'...${Color_Off}"
			rm -rf "$box_path"
		else
			echo -e  "${BRed}Box doesn't exist${Color_Off}"
		fi

		;;
	new*)
		box_path="$AXIOM_PATH/boxes/$2"

		if [ ! -d "$box_path" ]
		then
			echo -e "${BWhite}Creating box '$2'...${Color_Off}"
			mkdir -p "$box_path/work"
            cp $AXIOM_PATH/configs/oh-my-zsh.tar.gz $box_path/.oh-my-zsh.tar.gz
            cd $box_path/ && tar -xf .oh-my-zsh.tar.gz
		else
			echo -e "${BRed}Box already exists${Color_Off}"
		fi
		;;
	cp*)
		box_path="$AXIOM_PATH/boxes/$2"

		if [ -d "$box_path" ]
		then
			echo -e "${BWhite}Coping box '$2' to '$3'${Color_Off}"
			cp -r $box_path "$AXIOM_PATH/boxes/$3"
		fi
		;;
	get*)
		repo="https://github.com/$2.git"
		box=$(echo $2 | sed 's/\//-/g')
		echo -e "${BWhite}Cloning box: $2${Color_Off}"
        clone_path="$AXIOM_PATH/boxes/$box"

        if [ ! -d $clone_path ]
        then
		    git clone $repo $clone_path
        else
            cd $clone_path && git pull 
        fi
        ;;
    update*)
		box=$(echo $2 | sed 's/\//-/g')
        cd $AXIOM_PATH/$box && git pull 
        ;;
    import*)
		url="$2"
		if [[ ! -z "$2" ]]
		then
			echo -e "${BWhite}Downloading '$url'...${Color_Off}"
			filename=$(echo "$url" | sed 's/\// /g' | awk '{ print $NF }')
			new_filename=$(echo $filename | sed 's/.gpg//g')
			box=$(echo $new_filename | sed 's/.tar.gz//g')
			wget -O "/tmp/$filename" "$url"
			cd /tmp/
			gpg -o $new_filename -d $filename 
			mv /tmp/$new_filename $AXIOM_PATH/boxes/$new_filename
			rm /tmp/$filename
			cd $AXIOM_PATH/boxes/
			tar -xf $new_filename
			rm $new_filename
			echo -e "${BGreen}Box '$box'  successfully imported.${Color_Off}"
		else 
			echo -e "${BRed}Please supply a URL to import... axiom-boxes import https://example.com/box.tar.gz.gpg${Color_off}"
		fi
		;;
    archive*)
		box="$2"
        email=""
		recipient=""
		upload=""
		for var in "$@"
		do
			if [[ "$var" =~ "-r" ]]
			then
				 recipient="$(echo "$var" | sed 's/=/ /g' | awk '{ print $2 }')"
			fi

			if [[ "$var" =~ "--upload" ]];
			then
				upload=true
			fi
		done

		if [[ "$recipient" != "" ]];
		then
			email="$recipient"
			echo "Using email '$email'"
		else
			email="$(cat $AXIOM_PATH/axiom.json |  jq -r '.email?')"
		fi

		if [[ "$email" != "null" ]]
		then

			if [ -d "$AXIOM_PATH/boxes/$box/" ]
			then
				echo -e "${BWhite}Archiving $box...${Color_Off}${Blue}"
				cd $AXIOM_PATH/boxes/
				tar -czf "$box.tar.gz" $box
				rm -rf $box
				gpg -r "$email" -e "$box.tar.gz"
				rm "$box.tar.gz"
				mv "$box.tar.gz.gpg" "$AXIOM_PATH/archive/"
				echo -e "${BWhite}Archived $box successfully...${Color_Off}"

				if [[ "$upload" == "true" ]];
				then
					url=$(curl -s -T "$AXIOM_PATH/archive/$box.tar.gz.gpg" https://temp.sh)
					echo -e "${BGreen}Your backup has been uploaded to: '$url'\nThis box is encrypted and decryptable by $email only...${Color_Off}"
				fi
							else
				echo -e "${Red}Box does not exist...${Color_Off}"
			fi
		else
			echo -e "${BWhite}GPG is not configured within axiom, would you like to set it up?${Color_Off}"
			echo -e -n "${Blue}y/n: ${Color_Off}"
			read ans

			if [[ "$ans" == "y" ]]
			then
				echo -e "${BBlue}You have two choices... \n1) Generate a new key just for axiom (default)\n2) Use an existing key (manual)${Color_Off}"
				echo -e -n "${Blue}>> ${Color_Off}"
				read option
				
				if [[ "$option" -eq 1 ]]
				then
					echo -e "${Blue}Generating new gpg key...${Color_Off}"
					gpg --gen-key
					email=$(gpg --list-secret-keys | grep uid | tail -n1 |  grep -E -o "\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}\b")
					echo -e "${Blue}Generated key for $email!${Color_Off}"
					echo -e "${Blue}Please try the archive feature again now!${Color_Off}"
					cat $AXIOM_PATH/axiom.json | jq -r ".email |= \"$email\"" | jq > $AXIOM_PATH/axiom.json.new
					mv $AXIOM_PATH/axiom.json.new $AXIOM_PATH/axiom.json
				elif [[ "$option" -eq 2 ]]
				then
					echo -e -n "${Blue}Please enter your GPG recipient email: ${Color_Off}"
					read email
					cat $AXIOM_PATH/axiom.json | jq -r ".email |= \"$email\"" | jq
				fi
			fi
		fi

		;;
	unarchive*)
		box="$2"
		echo -e "${BWhite}Unarchiving $box...${Color_Off}${Blue}"
		if [ -f "$AXIOM_PATH/archive/$box.tar.gz.gpg" ]
		then
			cd $AXIOM_PATH/archive/
			gpg -o "$box.tar.gz" -d "$box.tar.gz.gpg"
			rm "$box.tar.gz.gpg"
			tar -xf "$box.tar.gz"
			rm "$box.tar.gz"
			mv "$box" "$AXIOM_PATH/boxes/"
			echo -e "${BWhite}Unarchived $box successfully...${Color_Off}"
		else
			echo -e "${Red}Box is not archived.${Color_Off}"
		fi
		;;

	*)
		echo "Command '$1' not found..."
		;;
	esac

else
	echo -e "Usage:\n\t axiom-boxes ls\n\t axiom-boxes new <BOX>\n\t axiom-boxes cd <BOX> \n\t axiom-boxes get user/repo"
fi
